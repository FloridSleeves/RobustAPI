FileChannel#write#TRY, write(ByteBuffer)@true, END_BLOCK, CATCH(Exception), END_BLOCK
FileChannel#write#TRY, getChannel()@true, write(ByteBuffer)@true, END_BLOCK, CATCH(Exception), END_BLOCK
FileChannel#write#TRY, write(ByteBuffer)@true, close()@true, END_BLOCK, CATCH(Exception), END_BLOCK
SimpleDateFormat#SimpleDateFormat#TRY, new SimpleDateFormat(String)@true, END_BLOCK, CATCH(Exception), END_BLOCK
Activity#setContentView#onCreate(Bundle)@true, setContentView(View)@true
List#get#LOOP, get(int)@arg0<rcv.size(), END_BLOCK
String#indexOf#indexOf(String)@true, IF, END_BLOCK
Activity#super#onCreate(Bundle)@true, setContentView(LinearLayout)@true
RandomAccessFile#write#TRY, write(byte[])@true, close()@true, END_BLOCK, CATCH(Exception), END_BLOCK
PrintWriter#write#TRY, write(String)@true, END_BLOCK, CATCH(Exception), END_BLOCK
PrintWriter#write#TRY, write(String)@true, close()@true, END_BLOCK, CATCH(Exception), END_BLOCK
PrintWriter#write#write(String)@true, close()@true
TypedArray#getString#getString(int)@true, recycle()@true
TypedArray#getString#getString(int)@true, IF, END_BLOCK
StringTokenizer#nextToken#new StringTokenizer(String,String)@true, nextToken()@rcv.hasMoreTokens()
Map#get#get(String)@true, IF, END_BLOCK
File#createNewFile#TRY, createNewFile()@true, END_BLOCK, CATCH(Exception), END_BLOCK
SQLiteDatabase#query#query(String,String[],String,String[],String,String,String)@true, close()@true
JsonElement#getAsString#getAsString()@rcv!=null
JsonElement#getAsString#TRY, getAsString()@rcv!=null, END_BLOCK, CATCH(Exception), END_BLOCK
JsonElement#getAsString#getAsString()@rcv.isJsonPrimitive()
JsonElement#getAsString#TRY, getAsString()@rcv.isJsonPrimitive(), END_BLOCK, CATCH(Exception), END_BLOCK
String#getBytes#getBytes(String)@true
JFrame#setPreferredSize#setPreferredSize(Dimension)@true, pack()@true
FileInputStream#FileInputStream#TRY, new FileInputStream(File)@true, END_BLOCK, CATCH(Exception), END_BLOCK
SimpleDateFormat#parse#TRY, parse(String)@true, END_BLOCK, CATCH(Exception), END_BLOCK
SimpleDateFormat#parse#new SimpleDateFormat(String)@true, parse(String)@true
ProgressDialog#dismiss#IF, dismiss()@rcv!=null, END_BLOCK
SimpleDateFormat#format#new SimpleDateFormat(String)@true, format(Date)@true
InputStream#read#TRY, read()@true, END_BLOCK, CATCH(Exception), END_BLOCK
Cipher#init#TRY, init(int,Key)@true, END_BLOCK, CATCH(Exception), END_BLOCK
Cipher#init#TRY, getInstance(String)@true, init(int,Key)@true, END_BLOCK, CATCH(Exception), END_BLOCK
Cipher#init#getInstance(String)@true, init(int,Key)@true
File#mkdir#mkdirs()@true
ApplicationInfo#loadIcon#TRY, loadIcon(PackageManager)@true, END_BLOCK, CATCH(Exception), END_BLOCK
ApplicationInfo#loadIcon#getPackageManager()@true, loadIcon(PackageManager)@true
BufferedReader#readLine#TRY, readLine()@true, END_BLOCK, CATCH(Exception), END_BLOCK
BufferedReader#readLine#new BufferedReader(InputStreamReader)@true, readLine()@true
BufferedReader#readLine#TRY, new BufferedReader(InputStreamReader)@true, readLine()@true, END_BLOCK, CATCH(Exception), END_BLOCK
BufferedReader#readLine#TRY, readLine()@true, END_BLOCK, CATCH(IOException), END_BLOCK
Iterator#next#next()@rcv.hasNext()