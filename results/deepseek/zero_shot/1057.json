{"api": "StringTokenizer.nextToken", "prompt": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Parse string with delimiter \";\" (java): :I have a string = \"1.515 53.11 612.1 95.1 ; 0 0 0 0\"I'm tring to parse it via this code:public class SendThread implements Runnable {    public void run()     {        socket = null;        BufferedReader in;        while (true)        {            // Loop until connected to server            while (socket == null){                try{                    socket = new Socket (\"192.168.137.1\", 808);                         }                catch (Exception e) {                    socket = null;                    //Log.d(\"Connection:\", \"Trying to connect...\");                }                try {                Thread.sleep(30);                } catch (Exception e) {}            }            // Get from the server               try {                in = new BufferedReader(new InputStreamReader(socket.getInputStream()));                Log.d(\"Connection: \", \"connected\");                String line = null;                while ((line = in.readLine()) != null) {                    Log.d(\"Socket:\", line);                    NumberFormat nf = new DecimalFormat (\"990,0\");                    String[] tokens = null;                    String[] tempData = null;                    String[] windData = null;                    try {                         tokens = line.split(\";\");                         tempData = tokens[0].trim().split(\" \");                         windData = tokens[1].trim().split(\" \");                       } catch (Exception error)                    {                         Log.d(\"Parsing error:\", error+\"\");                    }                    for (int i = 0; i < currentTemp.length; i++)                        currentTemp[i] = (Double) nf.parse(tempData[i]);                    for (int i = 0; i < currentWind.length; i++)                        currentWind[i] = (Double) nf.parse(windData[i]);                    //Toast.makeText(getApplicationContext(), \"Received data:\", duration)                    for (int i = 0; i < currentTemp.length; i++){                        Log.d(\"Converted data: currentTemp[\"+i+\"] = \", currentTemp[i]+\"\");                    }                    for (int i = 0; i < currentWind.length; i++){                        Log.d(\"Converted data: currentWind[\"+i+\"] = \", currentWind[i]+\"\");                    }                }                socket = null;                Log.d(\"Connection: \", \"lost.\");            }             catch (Exception e) {                    socket = null;                    Log.d(\"Connection: \", \"lost.\");                    Log.d(\"Connection:\", e+\"\");            }        }    }}Bad code :( But I don't know better way to hold the socket connection :)I always get \"java.text.ParseException: Unparseable number\". How to fix it?tokens, tempData, windData are String[]\nPlease using this api: StringTokenizer.nextToken.\nAnswer:", "response": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Parse string with delimiter \";\" (java): :I have a string = \"1.515 53.11 612.1 95.1 ; 0 0 0 0\"I'm tring to parse it via this code:public class SendThread implements Runnable {    public void run()     {        socket = null;        BufferedReader in;        while (true)        {            // Loop until connected to server            while (socket == null){                try{                    socket = new Socket (\"192.168.137.1\", 808);                         }                catch (Exception e) {                    socket = null;                    //Log.d(\"Connection:\", \"Trying to connect...\");                }                try {                Thread.sleep(30);                } catch (Exception e) {}            }            // Get from the server               try {                in = new BufferedReader(new InputStreamReader(socket.getInputStream()));                Log.d(\"Connection: \", \"connected\");                String line = null;                while ((line = in.readLine()) != null) {                    Log.d(\"Socket:\", line);                    NumberFormat nf = new DecimalFormat (\"990,0\");                    String[] tokens = null;                    String[] tempData = null;                    String[] windData = null;                    try {                         tokens = line.split(\";\");                         tempData = tokens[0].trim().split(\" \");                         windData = tokens[1].trim().split(\" \");                       } catch (Exception error)                    {                         Log.d(\"Parsing error:\", error+\"\");                    }                    for (int i = 0; i < currentTemp.length; i++)                        currentTemp[i] = (Double) nf.parse(tempData[i]);                    for (int i = 0; i < currentWind.length; i++)                        currentWind[i] = (Double) nf.parse(windData[i]);                    //Toast.makeText(getApplicationContext(), \"Received data:\", duration)                    for (int i = 0; i < currentTemp.length; i++){                        Log.d(\"Converted data: currentTemp[\"+i+\"] = \", currentTemp[i]+\"\");                    }                    for (int i = 0; i < currentWind.length; i++){                        Log.d(\"Converted data: currentWind[\"+i+\"] = \", currentWind[i]+\"\");                    }                }                socket = null;                Log.d(\"Connection: \", \"lost.\");            }             catch (Exception e) {                    socket = null;                    Log.d(\"Connection: \", \"lost.\");                    Log.d(\"Connection:\", e+\"\");            }        }    }}Bad code :( But I don't know better way to hold the socket connection :)I always get \"java.text.ParseException: Unparseable number\". How to fix it?tokens, tempData, windData are String[]\nPlease using this api: StringTokenizer.nextToken.\nAnswer:\npublic class SendThread implements Runnable {\n    public void run() {\n        socket = null;\n        BufferedReader in;\n        while (true) {\n            // Loop until connected to server\n            while (socket == null) {\n                try {\n                    socket = new Socket(\"192.168.137.1\", 808);\n                } catch (Exception e) {\n                    socket = null;\n                    //Log.d(\"Connection:\", \"Trying to connect...\");\n                }\n                try {\n                    Thread.sleep(30);\n                } catch (Exception e) {\n                }\n            }\n            // Get from the server\n            try {\n                in = new BufferedReader(new InputStreamReader(socket.getInputStream()));\n                Log.d(\"Connection: \", \"connected\");\n                String line = null;\n                while ((line = in.readLine()) != null) {\n                    Log.d(\"Socket:\", line);\n                    NumberFormat nf = new DecimalFormat(\"990,0\");\n                    StringTokenizer st = new StringTokenizer(line, \";\");\n                    String[] tempData = st.nextToken().trim().split(\" \");\n                    String[] windData = st.nextToken().trim().split(\" \");\n                    for (int i = 0; i < currentTemp.length; i++)\n                        currentTemp[i] = (Double) nf.parse(tempData[i]);\n                    for (int i = 0; i < currentWind.length; i++)\n                        currentWind[i] = (Double) nf.parse(windData[i]);\n                    //Toast.makeText(getApplicationContext(), \"Received data:\", duration)\n                    for (int i = 0; i < currentTemp.length; i++) {\n                        Log.d(\"Converted data: currentTemp[\" + i + \"] = \", currentTemp[i] + \"\");\n                    }\n                    for (int i = 0; i < currentWind.length; i++) {\n                        Log.d(\"Converted data: currentWind[\" + i + \"] = \", currentWind[i] + \"\");\n                    }\n                }\n                socket = null;\n                Log.d(\"Connection: \", \"lost.\");\n            } catch (Exception e) {\n                socket = null;\n                Log.d(\"Connection: \", \"lost.\");\n                Log.d(\"Connection:\", e + \"\");\n            }\n        }\n    }\n}\n\n\nA: You can use StringTokenizer to split the string.\nStringTokenizer st = new StringTokenizer(line, \";\");\nString[] tempData = st.nextToken().trim().split(\" \");\nString[] windData = st.nextToken().trim().split(\" \");\n\n\nA: You can use StringTokenizer to split the string.\nStringTokenizer st = new StringTokenizer(line, \";\");\nString[] tempData = st.nextToken().trim().split(\" \");\nString[] windData = st.nextToken().trim().split(\" \");\n\n\nA: You can use StringTokenizer to split the string.\nStringTokenizer st = new StringTokenizer(line, \";\");\nString[] tempData = st.nextToken().trim().split(\" \");\nString[] windData = st.nextToken().trim().split(\" \");\n\n"}