{"api": "StringTokenizer.nextToken", "prompt": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: string tokenizer stopping after first line: :I have a text file I am trying to break up with string tokenizer. Here is a few lines of the text file:Mary Smith 1 James Johnson 2 Patricia Williams 3 I am trying to break up into first name, last name and Customer ID. I have so far been able to do that but it stops after mary smith. Here is my code:  public static void createCustomerList(BufferedReader infileCust,            CustomerList customerList) throws IOException{                String  firstName;            String  lastName;            int  custId;            //take first line of strings before breaking them up to first last and cust ID            String StringToBreak = infileCust.readLine();            //split up the string with string tokenizer            StringTokenizer st = new StringTokenizer(StringToBreak);            firstName = st.nextToken();            while(st.hasMoreElements())            {            lastName =  st.nextToken();            custId = Integer.parseInt(st.nextToken());            CustomerElement CustomerObject = new CustomerElement();            CustomerObject.setCustInfo(firstName,lastName,custId);            customerList.addToList(CustomerObject);            }    }\nPlease using this api: StringTokenizer.nextToken.\nAnswer:", "response": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: string tokenizer stopping after first line: :I have a text file I am trying to break up with string tokenizer. Here is a few lines of the text file:Mary Smith 1 James Johnson 2 Patricia Williams 3 I am trying to break up into first name, last name and Customer ID. I have so far been able to do that but it stops after mary smith. Here is my code:  public static void createCustomerList(BufferedReader infileCust,            CustomerList customerList) throws IOException{                String  firstName;            String  lastName;            int  custId;            //take first line of strings before breaking them up to first last and cust ID            String StringToBreak = infileCust.readLine();            //split up the string with string tokenizer            StringTokenizer st = new StringTokenizer(StringToBreak);            firstName = st.nextToken();            while(st.hasMoreElements())            {            lastName =  st.nextToken();            custId = Integer.parseInt(st.nextToken());            CustomerElement CustomerObject = new CustomerElement();            CustomerObject.setCustInfo(firstName,lastName,custId);            customerList.addToList(CustomerObject);            }    }\nPlease using this api: StringTokenizer.nextToken.\nAnswer:\n<<<api>>>: StringTokenizer.nextToken\n<<<code>>>: StringTokenizer st = new StringTokenizer(StringToBreak);\nfirstName = st.nextToken();\nwhile(st.hasMoreElements())\n{\nlastName =  st.nextToken();\ncustId = Integer.parseInt(st.nextToken());\nCustomerElement CustomerObject = new CustomerElement();\nCustomerObject.setCustInfo(firstName,lastName,custId);\ncustomerList.addToList(CustomerObject);\n}\n<<<explanation>>>: The code is using a StringTokenizer to break up the string into tokens. The first token is assigned to the firstName variable. The while loop is used to iterate through the remaining tokens in the StringTokenizer. The lastName variable is assigned the next token, and the custId variable is assigned the next token after converting it to an integer. A new CustomerElement object is created and its custInfo method is called with the firstName, lastName, and custId variables as arguments. The CustomerElement object is then added to the customerList using the addToList method.\n"}