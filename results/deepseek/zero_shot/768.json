{"api": "PrintWriter.write", "prompt": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Android, upload a file in the tomcat server: :I am looking for code that can quickly upload an image from my android application in tomcat server.At the moment I have not found the java code to place in the tomcat server (servlet)\nPlease using this api: PrintWriter.write.\nAnswer:", "response": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Android, upload a file in the tomcat server: :I am looking for code that can quickly upload an image from my android application in tomcat server.At the moment I have not found the java code to place in the tomcat server (servlet)\nPlease using this api: PrintWriter.write.\nAnswer:\n<<<api>>>: PrintWriter.write\n<<<code>>>:\nPrintWriter out = response.getWriter();\nout.write(\"<html><body>\");\nout.write(\"<h1>\" + message + \"</h1>\");\nout.write(\"</body></html>\");\n<<<explanation>>>:\nThis code is used to write the message to the response.\n\nA: You can use the following code to upload a file to the server:\nprivate void uploadFile(String selectedPath) {\n    String url = \"http://192.168.1.100:8080/upload\";\n    HttpURLConnection connection = null;\n    DataOutputStream outputStream = null;\n    DataInputStream inputStream = null;\n\n    String lineEnd = \"\\r\\n\";\n    String twoHyphens = \"--\";\n    String boundary = \"*****\";\n\n    int bytesRead, bytesAvailable, bufferSize;\n    byte[] buffer;\n    int maxBufferSize = 1 * 1024 * 1024;\n\n    try {\n        FileInputStream fileInputStream = new FileInputStream(new File(selectedPath));\n\n        URL url1 = new URL(url);\n\n        connection = (HttpURLConnection) url1.openConnection();\n        connection.setDoInput(true); // Allow Inputs\n        connection.setDoOutput(true); // Allow Outputs\n        connection.setUseCaches(false); // Don't use a Cached Copy\n        connection.setRequestMethod(\"POST\");\n        connection.setRequestProperty(\"Connection\", \"Keep-Alive\");\n        connection.setRequestProperty(\"ENCTYPE\", \"multipart/form-data\");\n        connection.setRequestProperty(\"Content-Type\", \"multipart/form-data;boundary=\" + boundary);\n        connection.setRequestProperty(\"uploaded_file\", selectedPath);\n\n        outputStream = new DataOutputStream(connection.getOutputStream());\n        outputStream.writeBytes(twoHyphens + boundary + lineEnd);\n        outputStream.writeBytes(\"Content-Disposition: form-data; name=\\\"uploaded_file\\\";filename=\\\"\" + selectedPath + \"\\\"\" + lineEnd);\n        outputStream.writeBytes(lineEnd);\n\n        bytesAvailable = fileInputStream.available();\n        bufferSize = Math.min(bytesAvailable, maxBufferSize);\n        buffer = new byte[bufferSize];\n\n        bytesRead = fileInputStream.read(buffer, 0, bufferSize);\n\n        while (bytesRead > 0) {\n            outputStream.write(buffer, 0, bufferSize);\n            bytesAvailable = fileInputStream.available();\n            bufferSize = Math.min(bytesAvailable, maxBufferSize);\n            bytesRead = fileInputStream.read(buffer, 0, bufferSize);\n        }\n\n        outputStream.writeBytes(lineEnd);\n        outputStream.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);\n\n        fileInputStream.close();\n        outputStream.flush();\n\n        inputStream = new DataInputStream(connection.getInputStream());\n        String response = inputStream.readLine();\n\n        Log.i(\"Upload File Response\", response);\n\n        inputStream.close();\n        outputStream.close();\n    } catch (Exception ex) {\n        ex.printStackTrace();\n    }\n}\n\n"}