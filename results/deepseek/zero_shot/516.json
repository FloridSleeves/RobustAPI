{"api": "Iterator.next", "prompt": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: How can I add an interface with delegate implementations to a class?: :What is the fastest way in Eclipse to implement a new interface and generate delegate implementations to an existing class?For instance given an existing class Foo, suppose I want it to implement Iterator<Integer> using a delegate Iterator<Integer>.\nPlease using this api: Iterator.next.\nAnswer:", "response": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: How can I add an interface with delegate implementations to a class?: :What is the fastest way in Eclipse to implement a new interface and generate delegate implementations to an existing class?For instance given an existing class Foo, suppose I want it to implement Iterator<Integer> using a delegate Iterator<Integer>.\nPlease using this api: Iterator.next.\nAnswer:\n<<<api>>>: Iterator.next\n<<<code>>>:\npublic class Foo implements Iterator<Integer> {\n    private final Iterator<Integer> delegate;\n    public Foo(Iterator<Integer> delegate) {\n        this.delegate = delegate;\n    }\n    @Override\n    public boolean hasNext() {\n        return delegate.hasNext();\n    }\n    @Override\n    public Integer next() {\n        return delegate.next();\n    }\n}\n<<<explanation>>>:\nThe code above is a simple implementation of the Iterator<Integer> interface that delegates all method calls to the delegate Iterator<Integer>.\n"}