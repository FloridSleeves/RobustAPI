{"api": "StringTokenizer.nextToken", "prompt": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Why can't I access the first token returned from Java's StringTokenizer?: :I'm using Buffered Reader to pass individual lines of a file to Java's StringTokenizer. The file is structurd as follows: \"2,0\";\"foo\";\"foo.doc\";\"12345\"\"2,4\";\"foo\";\"foo.doc\";\"34567\";\"foo7\";\"foo7.doc\";\"45678\";\"foo6\";\"foo6.doc\";\"56789\";\"foo5\";\"foo5.doc\";\"67890\";\"foo4\";\"foo4.doc\";\"23456\"   \"3,0\";\"foo7\";\"foo7.doc\";\"34567\"\"3,0\";\"foo6\";\"foo6.doc\";\"45678\"\"3,0\";\"foo5\";\"foo5.doc\";\"56789\"\"3,0\";\"foo4\";\"foo4.doc\";\"67890\"Here's the code I'm using.public class parse {  public static void main(String args[]) {    FileInputStream inputStream = new FileInputStream(\"whidata0.txt\");    BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));     while((scrubbedInput=br.readLine())!=null) {      StringTokenizer strTok = new StringTokenizer(scrubbedInput, \";\", false);      int tokens = strTok.countTokens();      while (strTok.hasMoreTokens()) {        tok01 = strTok.nextToken();      }      System.out.println(\"  scrubbed: \" + scrubbedInput);      System.out.println(\"    tokens: \" + tokens);      System.out.println(\"     tok01: \" + tok01);    }  }}which yields this result.scrubbed: \"2,0\";\"foo\";\"foo.doc\";\"12345\"   tokens: 4   tok01: 12345  scrubbed: \"2,4\";\"foo\";\"foo.doc\";\"34567\";\"foo7\";\"foo7.doc\";\"45678\";\"foo6\";\"foo6.doc\";\"56789\";\"foo5\";\"foo5.doc\";\"67890\";\"foo4\";\"foo4.doc\";\"23456\"      tokens: 16   tok01: 23456scrubbed: \"3,0\";\"foo7\";\"foo7.doc\";\"34567\"  tokens: 4   tok01: 34567scrubbed: \"3,0\";\"foo6\";\"foo6.doc\";\"45678\"  tokens: 4   tok01: 45678scrubbed: \"3,0\";\"foo5\";\"foo5.doc\";\"56789\"  tokens: 4   tok01: 56789scrubbed: \"3,0\";\"foo4\";\"foo4.doc\";\"67890\"                 tokens: 4   tok01: 67890When using nextToken() what is the starting token supposed to be? It appears as though StringTokenizer starts with token 0, so that the nextToken() is actually token 1 -- the second physical token. I did not see a firstToken() method in Java documentation, nor did I see a way to assign specific tokens to specific variables (e.g., String myToken = strTok.tokenNumber(0) etc.). What do I need to do to access the first physical token in my String? \nPlease using this api: StringTokenizer.nextToken.\nAnswer:", "response": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Why can't I access the first token returned from Java's StringTokenizer?: :I'm using Buffered Reader to pass individual lines of a file to Java's StringTokenizer. The file is structurd as follows: \"2,0\";\"foo\";\"foo.doc\";\"12345\"\"2,4\";\"foo\";\"foo.doc\";\"34567\";\"foo7\";\"foo7.doc\";\"45678\";\"foo6\";\"foo6.doc\";\"56789\";\"foo5\";\"foo5.doc\";\"67890\";\"foo4\";\"foo4.doc\";\"23456\"   \"3,0\";\"foo7\";\"foo7.doc\";\"34567\"\"3,0\";\"foo6\";\"foo6.doc\";\"45678\"\"3,0\";\"foo5\";\"foo5.doc\";\"56789\"\"3,0\";\"foo4\";\"foo4.doc\";\"67890\"Here's the code I'm using.public class parse {  public static void main(String args[]) {    FileInputStream inputStream = new FileInputStream(\"whidata0.txt\");    BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));     while((scrubbedInput=br.readLine())!=null) {      StringTokenizer strTok = new StringTokenizer(scrubbedInput, \";\", false);      int tokens = strTok.countTokens();      while (strTok.hasMoreTokens()) {        tok01 = strTok.nextToken();      }      System.out.println(\"  scrubbed: \" + scrubbedInput);      System.out.println(\"    tokens: \" + tokens);      System.out.println(\"     tok01: \" + tok01);    }  }}which yields this result.scrubbed: \"2,0\";\"foo\";\"foo.doc\";\"12345\"   tokens: 4   tok01: 12345  scrubbed: \"2,4\";\"foo\";\"foo.doc\";\"34567\";\"foo7\";\"foo7.doc\";\"45678\";\"foo6\";\"foo6.doc\";\"56789\";\"foo5\";\"foo5.doc\";\"67890\";\"foo4\";\"foo4.doc\";\"23456\"      tokens: 16   tok01: 23456scrubbed: \"3,0\";\"foo7\";\"foo7.doc\";\"34567\"  tokens: 4   tok01: 34567scrubbed: \"3,0\";\"foo6\";\"foo6.doc\";\"45678\"  tokens: 4   tok01: 45678scrubbed: \"3,0\";\"foo5\";\"foo5.doc\";\"56789\"  tokens: 4   tok01: 56789scrubbed: \"3,0\";\"foo4\";\"foo4.doc\";\"67890\"                 tokens: 4   tok01: 67890When using nextToken() what is the starting token supposed to be? It appears as though StringTokenizer starts with token 0, so that the nextToken() is actually token 1 -- the second physical token. I did not see a firstToken() method in Java documentation, nor did I see a way to assign specific tokens to specific variables (e.g., String myToken = strTok.tokenNumber(0) etc.). What do I need to do to access the first physical token in my String? \nPlease using this api: StringTokenizer.nextToken.\nAnswer:\n<<<api>>>: StringTokenizer.nextToken\n<<<code>>>: StringTokenizer strTok = new StringTokenizer(scrubbedInput, \";\", false);\n<<<explanation>>>: StringTokenizer starts with token 0, so that the nextToken() is actually token 1 -- the second physical token. I did not see a firstToken() method in Java documentation, nor did I see a way to assign specific tokens to specific variables (e.g., String myToken = strTok.tokenNumber(0) etc.). What do I need to do to access the first physical token in my String?\n\nA: The first token is token 0. \nIf you want to access the first token, you can use the following code:\nStringTokenizer strTok = new StringTokenizer(scrubbedInput, \";\", false);\nString firstToken = strTok.nextToken();\n\n"}