{"api": "Iterator.next", "prompt": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Java: Implement own Linked LIst -> Where to define hasNext(), next(), remove()?: :HOMEWORK: Please guide me help guide me without posting complete codeMy instructor is having us implement a LinkedList as a homework assignment. Here is the header for the shell of the class:public class LinkedList<T> implements Iterable<T>, Iterator<T>Note he is implementing the Iterable and Iterator interfaces. I then understand that I need to implement an iterator(), hasNext(), next(), and remove() methods in my class. What confuses me though is that he does not put the methods required for the Iterator interface in a separate inner class. All of the methods below are defined in the LinkedList class:/* * (non-Javadoc) *  * @see java.lang.Iterable#iterator() */@Overridepublic Iterator<T> iterator(){    return null;}/* * (non-Javadoc) *  * @see java.util.Iterator#hasNext() */@Overridepublic boolean hasNext(){    return false;}/* * (non-Javadoc) *  * @see java.util.Iterator#next() */@Overridepublic T next(){    return null;}/* * (non-Javadoc) *  * @see java.util.Iterator#remove() */@Overridepublic void remove(){}Shouldn't the iterator() method be returning something like:public Iterator<T> iterator(){    return new MyClassIterator(front);}Where MyClassIterator() is defined with the hasNext(), next(), and remove() methods. What am I missing?\nPlease using this api: Iterator.next.\nAnswer:", "response": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Java: Implement own Linked LIst -> Where to define hasNext(), next(), remove()?: :HOMEWORK: Please guide me help guide me without posting complete codeMy instructor is having us implement a LinkedList as a homework assignment. Here is the header for the shell of the class:public class LinkedList<T> implements Iterable<T>, Iterator<T>Note he is implementing the Iterable and Iterator interfaces. I then understand that I need to implement an iterator(), hasNext(), next(), and remove() methods in my class. What confuses me though is that he does not put the methods required for the Iterator interface in a separate inner class. All of the methods below are defined in the LinkedList class:/* * (non-Javadoc) *  * @see java.lang.Iterable#iterator() */@Overridepublic Iterator<T> iterator(){    return null;}/* * (non-Javadoc) *  * @see java.util.Iterator#hasNext() */@Overridepublic boolean hasNext(){    return false;}/* * (non-Javadoc) *  * @see java.util.Iterator#next() */@Overridepublic T next(){    return null;}/* * (non-Javadoc) *  * @see java.util.Iterator#remove() */@Overridepublic void remove(){}Shouldn't the iterator() method be returning something like:public Iterator<T> iterator(){    return new MyClassIterator(front);}Where MyClassIterator() is defined with the hasNext(), next(), and remove() methods. What am I missing?\nPlease using this api: Iterator.next.\nAnswer:\n<<<api>>>: Iterator.next\n<<<code>>>:\npublic T next(){\n    if(current == null){\n        throw new NoSuchElementException();\n    }\n    T data = current.data;\n    current = current.next;\n    return data;\n}\n<<<explanation>>>:\nThe next() method returns the data of the current node and then moves the current node to the next node.\n\nA: The iterator() method is returning an Iterator object. This object is an implementation of the Iterator interface. The Iterator interface has the following methods:\nboolean hasNext()\n\nReturns true if the iteration has more elements. (In other words, returns true if next() would return an element rather than throwing an exception.)\n\nT next()\n\nReturns the next element in the iteration.\n\nvoid remove()\n\nRemoves from the underlying collection the last element returned by this iterator (optional operation). This method can be called only once per call to next(). The behavior of an iterator is unspecified if the underlying collection is modified while the iteration is in progress in any way other than by calling this method.\n\nThe hasNext() and next() methods are implemented in the LinkedList class. The remove() method is implemented in the LinkedListIterator class. The LinkedListIterator class is an inner class of the LinkedList class.\n"}