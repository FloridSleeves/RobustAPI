{"api": "PrintWriter.write", "prompt": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Exporting variables with multiple values?: :import java.util.*;import java.text.*;import java.io.*;public class AvgTime {static double hrs1;static double min1;public static void main(String[] args) throws InterruptedException, FileNotFoundException {Scanner in = new Scanner(System.in);System.out.print(\"How many times? \");int numOfTimes = in.nextInt();double hrTotal = 0;double minTotal = 0;for (int i = 1; i <= numOfTimes; i++){  System.out.println(\"\\nEnter time in military time notation: \");  System.out.print(\"Hour  \");  double hrs1 = in.nextDouble();  System.out.print(\"Minute  \");  double min1 = in.nextDouble();  hrTotal += hrs1;  minTotal += min1;}//calculate averagedouble avgHr1 = hrTotal/numOfTimes;double timeMin1 = Math.round(minTotal/numOfTimes);DecimalFormat df = new DecimalFormat(\"###\");String hours = df.format(avgHr1);String minutes = df.format(timeMin1);String time = hours+\":\"+minutes+\":\"+00;String mt = hours+minutes;    SimpleDateFormat fmtMil = new SimpleDateFormat(\"HH:mm:ss\");    Date inDate = fmtMil.parse(time, new ParsePosition(0));    SimpleDateFormat fmtAMPM = new SimpleDateFormat(\"hh:mm:ss aa\");    StringBuffer outDate = fmtAMPM.format(inDate, new StringBuffer(), new FieldPosition(0));System.out.println(\"\\nThe average time is \" + outDate+\"\\n\"+mt+\" in military time.\\n\\n\");    String copy = \"Copying...\";    Thread.sleep( 550 );    for( int i = 0; i < copy.length(); i++ ) {        System.out.print(copy.charAt( i ) );         try{ Thread.sleep( 105 ); }catch( Exception e ){}        }        PrintWriter p = new PrintWriter(\"Times.txt\");           p.println(hrs1+min1);            p.close();        System.out.println(\"\\nDone\\n\\n\\n\");            Thread.sleep( 550 );  }}I want it to export to a file the times entered by the user. For example if the user sets the numOfTimes to be 2, I will have 2 different values for hrs1 and min1.Say they enter: 1629 and 2018.I want the text file to display the hrs1 (16) and the min1 (29) just like 1629. But instead of the 'hrs1+min1' when I put hrs1+min1 it just exports '0.0'. I just want it to export \"1629\" and \"2018\".Why is this and how do I fix it?OutputHow many times? 2Enter time in military time notation: Hour  16Minute  29Enter time in military time notation: Hour  20Minute  18What should be exported:16292018\nPlease using this api: PrintWriter.write.\nAnswer:", "response": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Exporting variables with multiple values?: :import java.util.*;import java.text.*;import java.io.*;public class AvgTime {static double hrs1;static double min1;public static void main(String[] args) throws InterruptedException, FileNotFoundException {Scanner in = new Scanner(System.in);System.out.print(\"How many times? \");int numOfTimes = in.nextInt();double hrTotal = 0;double minTotal = 0;for (int i = 1; i <= numOfTimes; i++){  System.out.println(\"\\nEnter time in military time notation: \");  System.out.print(\"Hour  \");  double hrs1 = in.nextDouble();  System.out.print(\"Minute  \");  double min1 = in.nextDouble();  hrTotal += hrs1;  minTotal += min1;}//calculate averagedouble avgHr1 = hrTotal/numOfTimes;double timeMin1 = Math.round(minTotal/numOfTimes);DecimalFormat df = new DecimalFormat(\"###\");String hours = df.format(avgHr1);String minutes = df.format(timeMin1);String time = hours+\":\"+minutes+\":\"+00;String mt = hours+minutes;    SimpleDateFormat fmtMil = new SimpleDateFormat(\"HH:mm:ss\");    Date inDate = fmtMil.parse(time, new ParsePosition(0));    SimpleDateFormat fmtAMPM = new SimpleDateFormat(\"hh:mm:ss aa\");    StringBuffer outDate = fmtAMPM.format(inDate, new StringBuffer(), new FieldPosition(0));System.out.println(\"\\nThe average time is \" + outDate+\"\\n\"+mt+\" in military time.\\n\\n\");    String copy = \"Copying...\";    Thread.sleep( 550 );    for( int i = 0; i < copy.length(); i++ ) {        System.out.print(copy.charAt( i ) );         try{ Thread.sleep( 105 ); }catch( Exception e ){}        }        PrintWriter p = new PrintWriter(\"Times.txt\");           p.println(hrs1+min1);            p.close();        System.out.println(\"\\nDone\\n\\n\\n\");            Thread.sleep( 550 );  }}I want it to export to a file the times entered by the user. For example if the user sets the numOfTimes to be 2, I will have 2 different values for hrs1 and min1.Say they enter: 1629 and 2018.I want the text file to display the hrs1 (16) and the min1 (29) just like 1629. But instead of the 'hrs1+min1' when I put hrs1+min1 it just exports '0.0'. I just want it to export \"1629\" and \"2018\".Why is this and how do I fix it?OutputHow many times? 2Enter time in military time notation: Hour  16Minute  29Enter time in military time notation: Hour  20Minute  18What should be exported:16292018\nPlease using this api: PrintWriter.write.\nAnswer: $CODE\nimport java.util.*;\nimport java.text.*;\nimport java.io.*;\npublic class AvgTime {\n    static double hrs1;\n    static double min1;\n    public static void main(String[] args) throws InterruptedException, FileNotFoundException {\n        Scanner in = new Scanner(System.in);\n        System.out.print(\"How many times? \");\n        int numOfTimes = in.nextInt();\n        double hrTotal = 0;\n        double minTotal = 0;\n        for (int i = 1; i <= numOfTimes; i++){\n            System.out.println(\"\\nEnter time in military time notation: \");\n            System.out.print(\"Hour  \");\n            hrs1 = in.nextDouble();\n            System.out.print(\"Minute  \");\n            min1 = in.nextDouble();\n            hrTotal += hrs1;\n            minTotal += min1;\n        }\n        //calculate average\n        double avgHr1 = hrTotal/numOfTimes;\n        double timeMin1 = Math.round(minTotal/numOfTimes);\n        DecimalFormat df = new DecimalFormat(\"###\");\n        String hours = df.format(avgHr1);\n        String minutes = df.format(timeMin1);\n        String time = hours+\":\"+minutes+\":\"+00;\n        String mt = hours+minutes;\n        SimpleDateFormat fmtMil = new SimpleDateFormat(\"HH:mm:ss\");\n        Date inDate = fmtMil.parse(time, new ParsePosition(0));\n        SimpleDateFormat fmtAMPM = new SimpleDateFormat(\"hh:mm:ss aa\");\n        StringBuffer outDate = fmtAMPM.format(inDate, new StringBuffer(), new FieldPosition(0));\n        System.out.println(\"\\nThe average time is \" + outDate+\"\\n\"+mt+\" in military time.\\n\\n\");\n        String copy = \"Copying...\";\n        Thread.sleep( 550 );\n        for( int i = 0; i < copy.length(); i++ ) {\n            System.out.print(copy.charAt( i ) );\n            try{ Thread.sleep( 105 ); }catch( Exception e ){}\n        }\n        PrintWriter p = new PrintWriter(\"Times.txt\");\n        p.println(hours+minutes);\n        p.close();\n        System.out.println(\"\\nDone\\n\\n\\n\");\n        Thread.sleep( 550 );\n    }\n}\n$EXPLANATION\nThe issue is that the variables `hrs1` and `min1` are static, which means they are shared across all instances of the class. When you call `in.nextDouble()`, it's reading the next double from the input, but it's not assigning it to `hrs1` or `min1`. Instead, it's assigning it to the static `hrs1` and `min1`. \n\nTo fix this, you should remove the `static` keyword from `hrs1` and `min1`, so they are instance variables, and they will be assigned the values read from the input. Then you can use `hrs1` and `min1` in the `PrintWriter.println()` statement.\n\nHere's the corrected code:\n\n```java\nimport java.util.*;\nimport java.text.*;\nimport java.io.*;\npublic class AvgTime {\n    double hrs1;\n    double min1;\n    public static void main(String[] args) throws InterruptedException, FileNotFoundException {\n        Scanner in = new Scanner(System.in);\n        System.out.print(\"How many times? \");\n        int numOfTimes = in.nextInt();\n        double hrTotal = 0;\n        double minTotal = 0;\n        for (int i = 1; i <= numOfTimes; i++){\n            System.out.println(\"\\nEnter time in military time notation: \");\n            System.out.print(\"Hour  \");\n            hrs1 = in.nextDouble();\n            System.out.print(\"Minute  \");\n            min1 = in.nextDouble();\n            hrTotal += hrs1;\n            minTotal += min1;\n        }\n        //calculate average"}