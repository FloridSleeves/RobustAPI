{"api": "PrintWriter.write", "prompt": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Writing to Text File from Comma Delimited ArrayList: :I have created a Song class that includes data members for a Song (Title, artist, album,length). I already have a .txt file that contains different songs which is stored into an array list. After the user finishes adding or deleting songs the program should write to the text file in the original format of the text file (comma separated).My problem is that the program writes to the file without the commas and it is causing my program to crash when I re-run it by getting an ArrayIndexOutOfBoundsException. I have attempted to use nested for-loops and the printf function but have had no success. How can i write to the file with its original formatting and avoid crashing after i write to it and attempt to run it again?This is the format of the .txt FileRock Lobster,The B-52's,The B-52's,4:37Walk Like An Egyptian,The Bangles,Different Light,3:24This is my Song Class with toString() methodpublic class Song {    //Declaring all data members.    private String title;    private String artist;    private String album;    private String length;    private static int songCounter = 0;    //Constructors for Song class.          public Song(String title, String artist, String album, String length){        this.title = title;        this.artist = artist;        this.album = album;        this.length = length;        songCounter++;    }    //Get and Set methods     public String getTitle(){        return title;    }    public void setTitle(String title) {        this.title = title;    }    public String getArtist(){        return artist;    }    public void setArtist(String artist) {        this.artist = artist;    }    public String getAlbum(){        return album;    }    public void setAlbum(String album){        this.album = album;    }    public String getLength(){        return length;    }    public void setLength(String length){        this.length = length;    }    public static int getSongCounter(){        return songCounter;    }    public int compareArtist(Song o){        return artist.compareTo(o.artist);    }    public int compareTitle(Song o){        return title.compareTo(o.title);    }    //Overriding the toString() function.    @Override    public String toString(){        return title +\",\"+artist+\",\"+album+\",\"+length;    }}      This is my Main Class that reads from the file and contains a write methodpublic class Library {public static void main(String[] args) {    ArrayList <Song> songList = new ArrayList <Song> ();    boolean repeat = true;    try{        Scanner read = new Scanner (new File(\"SongList.txt\"));        do{            String line = read.nextLine();            String [] tokens = line.split(\",\");            songList.add(new Song(tokens[0], tokens[1], tokens[2], tokens[3]));        }while(read.hasNext());        read.close();    }catch (FileNotFoundException e){        System.out.println(\"File not found.\");    }    while ( repeat ){        System.out.println(\"\\nSelect a Function\");        System.out.println(\"1. Search Song\");        System.out.println(\"2. Add Song\");        System.out.println(\"3. Delete Song\");        System.out.println(\"4. Display Songs\");        System.out.println(\"5. Quit\");        switch (MenuInputCheck(1, 5)){        case 1: searchSong(songList);                break;        case 2: addSong(songList);                break;        case 3: deleteSong(songList);                break;        case 4: displaySorted(songList);                break;        case 5: saveFile(songList);                repeat = false;                break;        }    }}public static void saveFile(ArrayList <Song> songList){    try{        PrintWriter writer = new PrintWriter(\"SongList.txt\");        for (int i = 0; i < songList.size();i++){            writer.println(i);        }        writer.close();    } catch (FileNotFoundException e){        System.out.println(\"File not found.\");    }}\nPlease using this api: PrintWriter.write.\nAnswer:", "response": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Writing to Text File from Comma Delimited ArrayList: :I have created a Song class that includes data members for a Song (Title, artist, album,length). I already have a .txt file that contains different songs which is stored into an array list. After the user finishes adding or deleting songs the program should write to the text file in the original format of the text file (comma separated).My problem is that the program writes to the file without the commas and it is causing my program to crash when I re-run it by getting an ArrayIndexOutOfBoundsException. I have attempted to use nested for-loops and the printf function but have had no success. How can i write to the file with its original formatting and avoid crashing after i write to it and attempt to run it again?This is the format of the .txt FileRock Lobster,The B-52's,The B-52's,4:37Walk Like An Egyptian,The Bangles,Different Light,3:24This is my Song Class with toString() methodpublic class Song {    //Declaring all data members.    private String title;    private String artist;    private String album;    private String length;    private static int songCounter = 0;    //Constructors for Song class.          public Song(String title, String artist, String album, String length){        this.title = title;        this.artist = artist;        this.album = album;        this.length = length;        songCounter++;    }    //Get and Set methods     public String getTitle(){        return title;    }    public void setTitle(String title) {        this.title = title;    }    public String getArtist(){        return artist;    }    public void setArtist(String artist) {        this.artist = artist;    }    public String getAlbum(){        return album;    }    public void setAlbum(String album){        this.album = album;    }    public String getLength(){        return length;    }    public void setLength(String length){        this.length = length;    }    public static int getSongCounter(){        return songCounter;    }    public int compareArtist(Song o){        return artist.compareTo(o.artist);    }    public int compareTitle(Song o){        return title.compareTo(o.title);    }    //Overriding the toString() function.    @Override    public String toString(){        return title +\",\"+artist+\",\"+album+\",\"+length;    }}      This is my Main Class that reads from the file and contains a write methodpublic class Library {public static void main(String[] args) {    ArrayList <Song> songList = new ArrayList <Song> ();    boolean repeat = true;    try{        Scanner read = new Scanner (new File(\"SongList.txt\"));        do{            String line = read.nextLine();            String [] tokens = line.split(\",\");            songList.add(new Song(tokens[0], tokens[1], tokens[2], tokens[3]));        }while(read.hasNext());        read.close();    }catch (FileNotFoundException e){        System.out.println(\"File not found.\");    }    while ( repeat ){        System.out.println(\"\\nSelect a Function\");        System.out.println(\"1. Search Song\");        System.out.println(\"2. Add Song\");        System.out.println(\"3. Delete Song\");        System.out.println(\"4. Display Songs\");        System.out.println(\"5. Quit\");        switch (MenuInputCheck(1, 5)){        case 1: searchSong(songList);                break;        case 2: addSong(songList);                break;        case 3: deleteSong(songList);                break;        case 4: displaySorted(songList);                break;        case 5: saveFile(songList);                repeat = false;                break;        }    }}public static void saveFile(ArrayList <Song> songList){    try{        PrintWriter writer = new PrintWriter(\"SongList.txt\");        for (int i = 0; i < songList.size();i++){            writer.println(i);        }        writer.close();    } catch (FileNotFoundException e){        System.out.println(\"File not found.\");    }}\nPlease using this api: PrintWriter.write.\nAnswer: The problem is that you are not writing the actual Song objects to the file, but rather their index in the ArrayList. You should be writing the toString() method of the Song objects, which will give you the original format of the text file. Here is the corrected saveFile method:\n\n```java\npublic static void saveFile(ArrayList<Song> songList){\n    try{\n        PrintWriter writer = new PrintWriter(\"SongList.txt\");\n        for (Song song : songList){\n            writer.println(song.toString());\n        }\n        writer.close();\n    } catch (FileNotFoundException e){\n        System.out.println(\"File not found.\");\n    }\n}\n```\n\nThis code will write each Song object in the ArrayList to the file, with the toString() method ensuring that the Song object is written in the correct format.\n\nNote: The PrintWriter.println(int) method writes the integer argument as a String. If you want to write the actual Song object, you should use PrintWriter.println(String) and pass the toString() method of the Song object as the argument.\n\nThis should resolve your issue and prevent your program from crashing when you attempt to run it again.\n\n<<<api>>>: PrintWriter.write\n<<<code>>>: writer.println(song.toString())\n<<<explanation>>>: This line is writing the toString() method of each Song object in the ArrayList to the file. The toString() method returns a String in the format \"title,artist,album,length\", which is the original format of the text file.\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n<|EOT|>\n"}