{"api": "StringTokenizer.nextToken", "prompt": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Java StringTokenizer.nextToken() skips over empty fields:I am using a tab (/t) as delimiter and I know there are some empty fields in my data e.g.:\n\none->two->->three\nWhere -> equals the tab. As you can see an empty field is still correctly surrounded by tabs. Data is collected using a loop :\n\n while ((strLine = br.readLine()) != null) {\n    StringTokenizer st = new StringTokenizer(strLine, \"\t\");\n    String test = st.nextToken();\n    ...\n    }\nYet Java ignores this \"empty string\" and skips the field.\n\nIs there a way to circumvent this behaviour and force java to read in empty fields anyway?\nPlease using this api: StringTokenizer.nextToken.\nAnswer:<<<api>>>: StringTokenizer.nextToken\n<<<code>>>: public class TestStringTokenStrict {\n\n/**\n * Strict implementation of StringTokenizer\n * \n * @param str\n * @param delim\n * @param strict\n *            true = include NULL Token\n * @return\n */\nstatic StringTokenizer getStringTokenizerStrict(String str, String delim, boolean strict) {\n    StringTokenizer st = new StringTokenizer(str, delim, strict);\n    StringBuffer sb = new StringBuffer();\n\n    while (st.hasMoreTokens()) {\n        String s = st.nextToken();\n        if (s.equals(delim)) {\n            sb.append(\" \").append(delim);\n        } else {\n            sb.append(s).append(delim);\n            if (st.hasMoreTokens())\n                st.nextToken();\n        }\n    }\n    return (new StringTokenizer(sb.toString(), delim));\n}\n\nstatic void altStringTokenizer(StringTokenizer st) {\n    while (st.hasMoreTokens()) {\n        String type = st.nextToken();\n        String one = st.nextToken();\n        String two = st.nextToken();\n        String three = st.nextToken();\n        String four = st.nextToken();\n        String five = st.nextToken();\n\n        System.out.println(\n                \"[\" + type + \"] [\" + one + \"] [\" + two + \"] [\" + three + \"] [\" + four + \"] [\" + five + \"]\");\n    }\n}\n\npublic static void main(String[] args) {\n    String input = \"Record|One||Three||Five\";\n    altStringTokenizer(getStringTokenizerStrict(input, \"|\", true));\n}}\n<<<explanation>>>: The object your method decompressGZIP() needs is a byte[].\n\nSo the basic, technical answer to the question you have asked is:\nQuestion: Error in using sharedpreferences: :I am trying to use sharedpreferences to save an array of boolean and retrieve it by a service when the application is closed. I am experiencing the following error on launch i do not understand it03-08 20:21:36.670: E/AndroidRuntime(346): FATAL EXCEPTION: main03-08 20:21:36.670: E/AndroidRuntime(346): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.GhattasAk.RingMe/com.GhattasAk.RingMe.Main}: java.util.NoSuchElementException03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1647)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1663)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.access$1500(ActivityThread.java:117)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:931)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.os.Handler.dispatchMessage(Handler.java:99)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.os.Looper.loop(Looper.java:123)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.main(ActivityThread.java:3683)03-08 20:21:36.670: E/AndroidRuntime(346):  at java.lang.reflect.Method.invokeNative(Native Method)03-08 20:21:36.670: E/AndroidRuntime(346):  at java.lang.reflect.Method.invoke(Method.java:507)03-08 20:21:36.670: E/AndroidRuntime(346):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)03-08 20:21:36.670: E/AndroidRuntime(346):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)03-08 20:21:36.670: E/AndroidRuntime(346):  at dalvik.system.NativeStart.main(Native Method)03-08 20:21:36.670: E/AndroidRuntime(346): Caused by: java.util.NoSuchElementException03-08 20:21:36.670: E/AndroidRuntime(346):  at java.util.StringTokenizer.nextToken(StringTokenizer.java:272)03-08 20:21:36.670: E/AndroidRuntime(346):  at com.GhattasAk.RingMe.Main.onCreate(Main.java:82)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1047)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1611)03-08 20:21:36.670: E/AndroidRuntime(346):  ... 11 morebelow is the code snippets where the sharedpreferences is usedpublic class Main extends ListActivity{    ArrayList<String> myArr = new ArrayList<String>();    ArrayList<Integer> isChk = new ArrayList<Integer>();    ArrayList<Boolean> isChkb,keysl = new ArrayList<Boolean>();    Boolean found;    String number, Name;    int CallerIndex;    int ringerMode;    int NameIndex;    AudioManager mAudioManager;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.main);        TelephonyManager telephonyManager = (TelephonyManager)getSystemService(Context.TELEPHONY_SERVICE);         telephonyManager.listen(callStateListener,PhoneStateListener.LISTEN_CALL_STATE);        mAudioManager = (AudioManager)getSystemService(AUDIO_SERVICE);        ringerMode = mAudioManager.getRingerMode();        Cursor people = getContentResolver().query(ContactsContract.Contacts.CONTENT_URI, null, null, null, null);        while (people.moveToNext()) {            NameIndex = people.getColumnIndex(PhoneLookup.DISPLAY_NAME);            //check if we have a valid column index            if (NameIndex != -1) {                Name = people.getString(NameIndex);                if(myArr.contains(Name)) {                    // do nothing, as the same String is already in the list                }                else {                    myArr.add(Name.toString());                }            }            }        Collections.sort(myArr, String.CASE_INSENSITIVE_ORDER);        boolean[] keys = new boolean[myArr.size()];        SharedPreferences prefs = getSharedPreferences(\"isChk\", MODE_PRIVATE);        String savedString = prefs.getString(\"keys\", \",false\");        StringTokenizer st = new StringTokenizer(savedString, \",\");         for (int i = 0; i < keys.length; i++) {            keys[i] = Boolean.valueOf(st.nextToken());          }for(int i = 0; i<myArr.size();i++){   if(keys[i]){        isChk.add(1);       isChkb.add(true);       keysl.add(true);       }   else{       isChk.add(0);         isChkb.add(false); //Line 95       keysl.add(false);       }}and then the onstop method to update the values and end @Override protected void onStop() {    super.onStop();      SharedPreferences prefs = getSharedPreferences(\"isChk\", MODE_PRIVATE);                    StringBuilder str = new StringBuilder();    for (int i = 0; i < keysl.size(); i++) {    str.append(keysl.get(i)).append(\",\");    }    prefs.edit().putString(\"keys\", str.toString()).commit();            }after checking the tokensizer if it has more elements in it i got this problem03-08 20:31:34.971: E/AndroidRuntime(378): FATAL EXCEPTION: main03-08 20:31:34.971: E/AndroidRuntime(378): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.GhattasAk.RingMe/com.GhattasAk.RingMe.Main}: java.lang.NullPointerException03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1647)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1663)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.ActivityThread.access$1500(ActivityThread.java:117)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:931)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.os.Handler.dispatchMessage(Handler.java:99)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.os.Looper.loop(Looper.java:123)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.ActivityThread.main(ActivityThread.java:3683)03-08 20:31:34.971: E/AndroidRuntime(378):  at java.lang.reflect.Method.invokeNative(Native Method)03-08 20:31:34.971: E/AndroidRuntime(378):  at java.lang.reflect.Method.invoke(Method.java:507)03-08 20:31:34.971: E/AndroidRuntime(378):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)03-08 20:31:34.971: E/AndroidRuntime(378):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)03-08 20:31:34.971: E/AndroidRuntime(378):  at dalvik.system.NativeStart.main(Native Method)03-08 20:31:34.971: E/AndroidRuntime(378): Caused by: java.lang.NullPointerException03-08 20:31:34.971: E/AndroidRuntime(378):  at com.GhattasAk.RingMe.Main.onCreate(Main.java:95)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1047)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1611)03-08 20:31:34.971: E/AndroidRuntime(378):  ... 11 moreLine 95    for(int i = 0; i<myArr.size();i++)    {       if(keys[i]){            isChk.add(1);           isChkb.add(true);           keysl.add(true);           }       else{           isChk.add(0);             isChkb.add(false); This is line 95           keysl.add(false);           }    }\nPlease using this api: StringTokenizer.nextToken.\nAnswer:", "response": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Java StringTokenizer.nextToken() skips over empty fields:I am using a tab (/t) as delimiter and I know there are some empty fields in my data e.g.:\n\none->two->->three\nWhere -> equals the tab. As you can see an empty field is still correctly surrounded by tabs. Data is collected using a loop :\n\n while ((strLine = br.readLine()) != null) {\n    StringTokenizer st = new StringTokenizer(strLine, \"\t\");\n    String test = st.nextToken();\n    ...\n    }\nYet Java ignores this \"empty string\" and skips the field.\n\nIs there a way to circumvent this behaviour and force java to read in empty fields anyway?\nPlease using this api: StringTokenizer.nextToken.\nAnswer:<<<api>>>: StringTokenizer.nextToken\n<<<code>>>: public class TestStringTokenStrict {\n\n/**\n * Strict implementation of StringTokenizer\n * \n * @param str\n * @param delim\n * @param strict\n *            true = include NULL Token\n * @return\n */\nstatic StringTokenizer getStringTokenizerStrict(String str, String delim, boolean strict) {\n    StringTokenizer st = new StringTokenizer(str, delim, strict);\n    StringBuffer sb = new StringBuffer();\n\n    while (st.hasMoreTokens()) {\n        String s = st.nextToken();\n        if (s.equals(delim)) {\n            sb.append(\" \").append(delim);\n        } else {\n            sb.append(s).append(delim);\n            if (st.hasMoreTokens())\n                st.nextToken();\n        }\n    }\n    return (new StringTokenizer(sb.toString(), delim));\n}\n\nstatic void altStringTokenizer(StringTokenizer st) {\n    while (st.hasMoreTokens()) {\n        String type = st.nextToken();\n        String one = st.nextToken();\n        String two = st.nextToken();\n        String three = st.nextToken();\n        String four = st.nextToken();\n        String five = st.nextToken();\n\n        System.out.println(\n                \"[\" + type + \"] [\" + one + \"] [\" + two + \"] [\" + three + \"] [\" + four + \"] [\" + five + \"]\");\n    }\n}\n\npublic static void main(String[] args) {\n    String input = \"Record|One||Three||Five\";\n    altStringTokenizer(getStringTokenizerStrict(input, \"|\", true));\n}}\n<<<explanation>>>: The object your method decompressGZIP() needs is a byte[].\n\nSo the basic, technical answer to the question you have asked is:\nQuestion: Error in using sharedpreferences: :I am trying to use sharedpreferences to save an array of boolean and retrieve it by a service when the application is closed. I am experiencing the following error on launch i do not understand it03-08 20:21:36.670: E/AndroidRuntime(346): FATAL EXCEPTION: main03-08 20:21:36.670: E/AndroidRuntime(346): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.GhattasAk.RingMe/com.GhattasAk.RingMe.Main}: java.util.NoSuchElementException03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1647)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1663)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.access$1500(ActivityThread.java:117)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:931)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.os.Handler.dispatchMessage(Handler.java:99)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.os.Looper.loop(Looper.java:123)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.main(ActivityThread.java:3683)03-08 20:21:36.670: E/AndroidRuntime(346):  at java.lang.reflect.Method.invokeNative(Native Method)03-08 20:21:36.670: E/AndroidRuntime(346):  at java.lang.reflect.Method.invoke(Method.java:507)03-08 20:21:36.670: E/AndroidRuntime(346):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)03-08 20:21:36.670: E/AndroidRuntime(346):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)03-08 20:21:36.670: E/AndroidRuntime(346):  at dalvik.system.NativeStart.main(Native Method)03-08 20:21:36.670: E/AndroidRuntime(346): Caused by: java.util.NoSuchElementException03-08 20:21:36.670: E/AndroidRuntime(346):  at java.util.StringTokenizer.nextToken(StringTokenizer.java:272)03-08 20:21:36.670: E/AndroidRuntime(346):  at com.GhattasAk.RingMe.Main.onCreate(Main.java:82)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1047)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1611)03-08 20:21:36.670: E/AndroidRuntime(346):  ... 11 morebelow is the code snippets where the sharedpreferences is usedpublic class Main extends ListActivity{    ArrayList<String> myArr = new ArrayList<String>();    ArrayList<Integer> isChk = new ArrayList<Integer>();    ArrayList<Boolean> isChkb,keysl = new ArrayList<Boolean>();    Boolean found;    String number, Name;    int CallerIndex;    int ringerMode;    int NameIndex;    AudioManager mAudioManager;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.main);        TelephonyManager telephonyManager = (TelephonyManager)getSystemService(Context.TELEPHONY_SERVICE);         telephonyManager.listen(callStateListener,PhoneStateListener.LISTEN_CALL_STATE);        mAudioManager = (AudioManager)getSystemService(AUDIO_SERVICE);        ringerMode = mAudioManager.getRingerMode();        Cursor people = getContentResolver().query(ContactsContract.Contacts.CONTENT_URI, null, null, null, null);        while (people.moveToNext()) {            NameIndex = people.getColumnIndex(PhoneLookup.DISPLAY_NAME);            //check if we have a valid column index            if (NameIndex != -1) {                Name = people.getString(NameIndex);                if(myArr.contains(Name)) {                    // do nothing, as the same String is already in the list                }                else {                    myArr.add(Name.toString());                }            }            }        Collections.sort(myArr, String.CASE_INSENSITIVE_ORDER);        boolean[] keys = new boolean[myArr.size()];        SharedPreferences prefs = getSharedPreferences(\"isChk\", MODE_PRIVATE);        String savedString = prefs.getString(\"keys\", \",false\");        StringTokenizer st = new StringTokenizer(savedString, \",\");         for (int i = 0; i < keys.length; i++) {            keys[i] = Boolean.valueOf(st.nextToken());          }for(int i = 0; i<myArr.size();i++){   if(keys[i]){        isChk.add(1);       isChkb.add(true);       keysl.add(true);       }   else{       isChk.add(0);         isChkb.add(false); //Line 95       keysl.add(false);       }}and then the onstop method to update the values and end @Override protected void onStop() {    super.onStop();      SharedPreferences prefs = getSharedPreferences(\"isChk\", MODE_PRIVATE);                    StringBuilder str = new StringBuilder();    for (int i = 0; i < keysl.size(); i++) {    str.append(keysl.get(i)).append(\",\");    }    prefs.edit().putString(\"keys\", str.toString()).commit();            }after checking the tokensizer if it has more elements in it i got this problem03-08 20:31:34.971: E/AndroidRuntime(378): FATAL EXCEPTION: main03-08 20:31:34.971: E/AndroidRuntime(378): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.GhattasAk.RingMe/com.GhattasAk.RingMe.Main}: java.lang.NullPointerException03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1647)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1663)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.ActivityThread.access$1500(ActivityThread.java:117)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:931)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.os.Handler.dispatchMessage(Handler.java:99)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.os.Looper.loop(Looper.java:123)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.ActivityThread.main(ActivityThread.java:3683)03-08 20:31:34.971: E/AndroidRuntime(378):  at java.lang.reflect.Method.invokeNative(Native Method)03-08 20:31:34.971: E/AndroidRuntime(378):  at java.lang.reflect.Method.invoke(Method.java:507)03-08 20:31:34.971: E/AndroidRuntime(378):  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:839)03-08 20:31:34.971: E/AndroidRuntime(378):  at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:597)03-08 20:31:34.971: E/AndroidRuntime(378):  at dalvik.system.NativeStart.main(Native Method)03-08 20:31:34.971: E/AndroidRuntime(378): Caused by: java.lang.NullPointerException03-08 20:31:34.971: E/AndroidRuntime(378):  at com.GhattasAk.RingMe.Main.onCreate(Main.java:95)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1047)03-08 20:31:34.971: E/AndroidRuntime(378):  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1611)03-08 20:31:34.971: E/AndroidRuntime(378):  ... 11 moreLine 95    for(int i = 0; i<myArr.size();i++)    {       if(keys[i]){            isChk.add(1);           isChkb.add(true);           keysl.add(true);           }       else{           isChk.add(0);             isChkb.add(false); This is line 95           keysl.add(false);           }    }\nPlease using this api: StringTokenizer.nextToken.\nAnswer:<<<api>>>: StringTokenizer.nextToken\n<<<code>>>: public class TestStringTokenStrict {\n\n/**\n * Strict implementation of StringTokenizer\n * \n * @param str\n * @param delim\n * @param strict\n *            true = include NULL Token\n * @return\n */\nstatic StringTokenizer getStringTokenizerStrict(String str, String delim, boolean strict) {\n    StringTokenizer st = new StringTokenizer(str, delim, strict);\n    StringBuffer sb = new StringBuffer();\n\n    while (st.hasMoreTokens()) {\n        String s = st.nextToken();\n        if (s.equals(delim)) {\n            sb.append(\" \").append(delim);\n        } else {\n            sb.append(s).append(delim);\n            if (st.hasMoreTokens())\n                st.nextToken();\n        }\n    }\n    return (new StringTokenizer(sb.toString(), delim));\n}\n\nstatic void altStringTokenizer(StringTokenizer st) {\n    while (st.hasMoreTokens()) {\n        String type = st.nextToken();\n        String one = st.nextToken();\n        String two = st.nextToken();\n        String three = st.nextToken();\n        String four = st.nextToken();\n        String five = st.nextToken();\n\n        System.out.println(\n                \"[\" + type + \"] [\" + one + \"] [\" + two + \"] [\" + three + \"] [\" + four + \"] [\" + five + \"]\");\n    }\n}\n\npublic static void main(String[] args) {\n    String input = \"Record|One||Three||Five\";\n    altStringTokenizer(getStringTokenizerStrict(input, \"|\", true));\n}}\n<<<explanation>>>: The object your method decompressGZIP() needs is a byte[].\n\nSo the basic, technical answer to the question you have asked is:\nQuestion: Error in using sharedpreferences: :I am trying to use sharedpreferences to save an array of boolean and retrieve it by a service when the application is closed. I am experiencing the following error on launch i do not understand it03-08 20:21:36.670: E/AndroidRuntime(346): FATAL EXCEPTION: main03-08 20:21:36.670: E/AndroidRuntime(346): java.lang.RuntimeException: Unable to start activity ComponentInfo{com.GhattasAk.RingMe/com.GhattasAk.RingMe.Main}: java.util.NoSuchElementException03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:1647)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:1663)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.access$1500(ActivityThread.java:117)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread$H.handleMessage(ActivityThread.java:931)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.os.Handler.dispatchMessage(Handler.java:99)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.os.Looper.loop(Looper.java:123)03-08 20:21:36.670: E/AndroidRuntime(346):  at android.app.ActivityThread.main(ActivityThread.java:3683)03-08 20:21:36.670: E/AndroidRuntime"}