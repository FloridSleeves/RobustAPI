{"api": "PrintWriter.write", "prompt": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the user's questions. USER: Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Reading and Writing text file?: :I'm suppose to write a program in which we ask the user for 2 files the first file is for reading and the second for writingthe first one we are suppose to read the file and then copy the info switch it all to uppercase and save it to the second fileI cant get it to write on the second part any help?public class FileConverter {public static void main(String[] args) throws IOException{    Scanner keyboard = new Scanner(System.in);    System.out.println(\"Enter the filename for the first file\");    String filename = keyboard.nextLine();    File file = new File(filename);    Scanner inputFile = new Scanner (file);    while(inputFile.hasNext())    {        String fileinfo = inputFile.nextLine();        String uppercaseinfo1 = fileinfo.toUpperCase();    }    System.out.print(\"Enter the filename \"                + \"for the second file\");    filename = keyboard.nextLine();    PrintWriter outputFile = new PrintWriter(file);    while(inputFile.hasNext())        {            outputFile.println();        }}}\nPlease using this api: PrintWriter.write.\nAnswer: ASSISTANT:", "response": "<<<api>>>: PrintWriter.write\n<<<code>>>: PrintWriter outputFile = new PrintWriter(file);\nwhile(inputFile.hasNext())\n{\noutputFile.println();\n}\n\n<<<explanation>>>: The issue with the code is that the PrintWriter object is not being used to write the content of the first file to the second file. Instead, it is being used to print the contents of the first file to the console. To fix this, the code should use the write() method of the PrintWriter object to write the contents of the first file to the second file. The write() method takes a string argument, which should be the content to be written to the file. In this case, the content is the result of the toUpperCase() method applied to the fileinfo variable. Therefore, the code should be modified as follows:\nPrintWriter outputFile = new PrintWriter(file);\nwhile(inputFile.hasNext())\n{\nString fileinfo = inputFile.nextLine();\nString uppercaseinfo1 = fileinfo.toUpperCase();\noutputFile.write(uppercaseinfo1);\n}"}