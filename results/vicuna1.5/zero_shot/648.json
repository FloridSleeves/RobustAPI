{"api": "Map.get", "prompt": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the user's questions. USER: Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: get fields names of certain types: :I have an example class below and I want to return all class fields of certain type, in this example of type Image. public class Contact {    private String surname, lastname, address;    private int age, floor;    private Image contactPhoto, companyPhoto;    private boolean isEmployed;    public String[] getAllImages() {        String images[] = // missing code        return images;        // in this case, I want to return {\"contactPhoto\",\"companyPhoto\"}    }}I need a help here. How can I find all class fields of certain type. I will be calling this method in another class ofc.\nPlease using this api: Map.get.\nAnswer: ASSISTANT:", "response": "<<<api>>>: java.util.Map.get\n<<<code>>>: Contact.class.getDeclaredFields().stream().filter(f -> f.getType().getName().equals(\"Image\")).map(f -> f.getName()).collect(Collectors.toList());\n<<<explanation>>>: This code uses the Java Reflection API to get all declared fields of the Contact class, and then filters them based on the type name \"Image\". Finally, it maps the field names to a list using the collectors.toList() method."}