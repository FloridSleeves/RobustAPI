{"api": "PrintWriter.write", "prompt": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the user's questions. USER: Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Extract text from html file using java: :I am working on a text crawler and I need to extract a certain text from several sites. I have used jsoup html parser:Document doc = Jsoup.connect(\"http://www.aljazeera.net/programs/behindthenews/2014/11/9/%D8%A3%D8%B3%D8%A8%D8%A7%D8%A8-%D9%88%D8%AF%D9%84%D8%A7%D9%84%D8%A7%D8%AA-%D8%A7%D8%B3%D8%AA%D9%85%D8%B1%D8%A7%D8%B1-%D8%A7%D9%84%D8%B5%D8%AF%D8%A7%D9%85-%D8%A8%D8%AC%D8%A7%D9%85%D8%B9%D8%A7%D8%AA-%D9%85%D8%B5%D8%B1\").get();Elements ps = doc.select(\"p\");String s = Jsoup.parse(ps.text()).text();PrintWriter out = new PrintWriter(\"newFile.txt\", \"UTF-8\");out.write(s);out.close();This algorithm gets me an unwanted text, the wanted text is under this tag <p dir=\"rtl\">And when I change my selection to Elements ps = doc.select(\"p dir=rtl\");, it returns a compilation error.Is there any way to make it just select this wanted tag?\nPlease using this api: PrintWriter.write.\nAnswer: ASSISTANT:", "response": "The given code uses the Jsoup library to extract text from an HTML file. The code selects all paragraph elements in the HTML document and concatenates their text into a single string. However, the desired text is located within a paragraph element with a specific direction attribute, which is not selected by the current code.\n\nTo select only the paragraph element with the desired direction attribute, the code can use the following modification:\n```java\nElements ps = doc.select(\"p[dir='rtl']\");\nString s = Jsoup.parse(ps.text()).text();\nPrintWriter out = new PrintWriter(\"newFile.txt\", \"UTF-8\");\nout.write(s);\nout.close();\n```\nThis code selects only the paragraph elements with the `dir` attribute set to \"rtl\". The rest of the code remains the same, writing the extracted text to a new file."}