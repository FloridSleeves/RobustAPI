{"api": "PrintWriter.write", "prompt": "A chat between a curious user and an artificial intelligence assistant. The assistant gives helpful, detailed, and polite answers to the user's questions. USER: Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: Q re Java Programme to read from a text file, create an arraylist, reformat, and output to another file: :As a java student (beginner) I've just completed a task to write a program to perform the following tasks:Read the content of a text file;Pick out all words within the text, replacing all upper case letters with lower case ones;Produce a dictionary of the words appearing in the text (i.e., a list of the words in alphabetical order, one word per line, without duplication);Output the dictionary to another file.We were advised to have a single class containing our main method, and use the ArrayList, Scanner, PrintWriter and FileReader classes. I managed to do the below, which works, but it has raised some questions/fundamental gaps in my knowledge. I  believe that based on the principles of good O.O. programming practice, I should break the below down into a series of methods that have a single purpose, and then call those methods. However, I really struggle doing this. Can anyone please elaborate/advise a way to improve on that specific point? Or correct me if I'm wrong? public class Main{    private static ArrayList<String> dictionary;     private static ArrayList<String> tempdictionary;    public static void main() throws FileNotFoundException    {        Scanner inFile = new Scanner(new FileReader(\"H:\\\\csc8001\\\\results.txt\"));        dictionary = new ArrayList <>();        tempdictionary = new ArrayList <>();        while (inFile.hasNext()) {             dictionary.add(inFile.next().toLowerCase().replaceAll(\"[^a-zA-Z ]\", \"\"));        }        inFile.close();        PrintWriter outFile = new PrintWriter(\"H:\\\\csc8001\\\\results1.txt\");        int index = 0;        for (String a : dictionary)        {            if (!tempdictionary.contains(a)){                 tempdictionary.add(a);            } else {                index++;            }        }        Collections.sort(tempdictionary);        for (int i=0; i<tempdictionary.size(); i++)            outFile.println(tempdictionary.get(i));        outFile.flush();        outFile.close();    }}\nPlease using this api: PrintWriter.write.\nAnswer: ASSISTANT:", "response": "<<<api>>>: java.io.PrintWriter.write(String)\n<<<code>>>: outFile.write(tempdictionary.get(i));\n<<<explanation>>>: The code is using the PrintWriter.write() method to output the elements of the tempdictionary array list to a file. The method takes a single String argument, which is the element to be written to the file. In this case, the element is obtained from the tempdictionary array list using the get() method and the index i is used to access the correct element. The write() method is used to write the element to the file."}