{
    "id": "chatcmpl-7nEyBHQSiP97nYFMJbrlQB6rLvXPK",
    "object": "chat.completion",
    "created": 1691969971,
    "model": "gpt-4-0613",
    "choices": [
        {
            "index": 0,
            "message": {
                "role": "assistant",
                "content": "<<<api>>>: PrintWriter.write\n<<<code>>>: \ntry {\n    BufferedReader reader = new BufferedReader(new FileReader(\"input.txt\"));\n    int count = 0;\n    String line;\n    PrintWriter writer = new PrintWriter(\"output\" + count + \".txt\", \"UTF-8\");\n\n    while ((line = reader.readLine()) != null) {\n        if (count % 2000 == 0 && count != 0) {\n            writer.close();\n            writer = new PrintWriter(\"output\" + count/2000 + \".txt\", \"UTF-8\");\n        }\n        writer.println(line);\n        count++;\n    }\n    writer.close();\n} catch (IOException e) {\n    e.printStackTrace();\n}\n<<<explanation>>>: This code reads the input file line by line using BufferedReader. For every 2000 lines, it creates a new output file and writes the lines to it using PrintWriter. The output files are named \"output0.txt\", \"output1.txt\", etc. The PrintWriter.write() method is used to write the lines to the output files."
            },
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 230,
        "completion_tokens": 213,
        "total_tokens": 443
    },
    "prompt": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: How can I calculate the sum of an array in Java?\nPlease using this api: Arrays.stream.\nAnswer:<<<api>>>: Arrays.stream\n<<<code>>>: int[] array = {1, 2, 3, 4, 5};\nint sum = Arrays.stream(array).sum();\n<<<explanation>>>: The sum() method of the IntStream class returns the sum of elements in this stream. This is a special case of a reduction. This is a terminal operation.\nQuestion: Split Flat File using Java: :I am fairly new to java and need some help.  I have flat file with 10 columns and a total of, lets say, 9750 rows.  All the rows are pipe delimited.  I need to split the file into 2000 rows each (5 files). How do I do this in Java?\nPlease using this api: PrintWriter.write.\nAnswer:"
}