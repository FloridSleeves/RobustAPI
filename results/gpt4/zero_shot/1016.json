{
    "id": "chatcmpl-7m90go8m8jdhKwcZEC6XjUtdM0kOl",
    "object": "chat.completion",
    "created": 1691708734,
    "model": "gpt-4-0613",
    "choices": [
        {
            "index": 0,
            "message": {
                "role": "assistant",
                "content": "<<<api>>>: StringTokenizer.nextToken\n<<<code>>>: \n```java\nprivate Map<String, Double> createElementMassMap(String filePath) {\n    Map<String, Double> elementMap = new HashMap<>();\n    try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {\n        String line;\n        while ((line = br.readLine()) != null) {\n            StringTokenizer st = new StringTokenizer(line, \", \");\n            while (st.hasMoreTokens()) {\n                String name = st.nextToken();\n                System.out.println(name);\n                double mass = Double.parseDouble(st.nextToken());\n                System.out.println(mass);\n                elementMap.put(name, mass);\n            }\n        }\n    } catch (IOException e) {\n        e.printStackTrace();\n        JOptionPane.showMessageDialog(self, \"Error loading ElementMasses file.\", \"IOException\", JOptionPane.ERROR_MESSAGE);\n    }\n    return elementMap;\n}\n```\n<<<explanation>>>: The NoSuchElementException is thrown by the Scanner when there are no more tokens in its input. In your case, it's likely that the delimiter pattern is not matching correctly, causing the Scanner to think there are more tokens when there aren't. \n\nTo solve this, I've replaced the Scanner with a BufferedReader and StringTokenizer. The BufferedReader reads the file line by line, and the StringTokenizer splits each line into tokens using the specified delimiter (\", \"). The StringTokenizer.nextToken method is then used to retrieve each token in turn. This should correctly parse your file and avoid the NoSuchElementException."
            },
            "finish_reason": "stop"
        }
    ],
    "usage": {
        "prompt_tokens": 295,
        "completion_tokens": 288,
        "total_tokens": 583
    },
    "prompt": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nQuestion: java.util.NoSuchElementException from Scanner: :I'm having trouble with my scanner when it's reading a file. It's suppose to make a new token when there's a comma followed by a space or when a new line is created, but after the 4 tokens, it throws the NoSuchElementException.    private Map<String, Double> createElementMassMap(String filePath) {    Map<String, Double> elementMap = new HashMap<>();    try (Scanner sc = new Scanner(new FileReader(filePath))) {        sc.useDelimiter(Pattern.compile(\"(, ) | (\\r\\n)\"));        sc.useLocale(Locale.US);        while(sc.hasNext()) {            String name = sc.next();            System.out.println(name);            double mass = sc.nextDouble();            System.out.println(mass);            elementMap.put(name, mass);        }    } catch (IOException e) {        e.printStackTrace();        JOptionPane.showMessageDialog(self, \"Error loading ElementMasses file.\", \"IOException\", JOptionPane.ERROR_MESSAGE);    }     return elementMap;}Here's the file it's trying to readH, 1.00O, 16.00and i made sure there isn't an empty line in the file.\nPlease using this api: StringTokenizer.nextToken.\nAnswer:"
}