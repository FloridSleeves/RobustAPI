{"api": "StringTokenizer.nextToken", "prompt": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nFor API StringTokenizer.nextToken, the API usage rule is: Create a StringTokenizer with a specified string and delimiter, and then obtain the next token as long as there are more tokens available.\n\nQuestion: In read and write text file i have to print all the data in the text file but it print only the last line how to get all line write: :Read and write the text.In read and write text file i have to print all the data in the text file but it print only the last line how to get all line write.Program:public class fs  {    try       {            BufferReader in = new BufferReader(FileReader(C:/Users/madhan kumar/Desktop/read.txt));        String s;         String[] result=null;        while((s=in.readLine())!=null)        {         result=s.split(\"\\\\|\");          result = String[4];          String Name = result[0];           String age = result[1];           String Sex = result[2];            String field = result[3];              System.out.println(\"Name :\"+Name+\"Age                        :\"+age+\"Sex :\"+Sex+\"Field\"+field);                         BufferedWriter bw =new BufferedWriter (new FileWriter (\"out.txt\");        bw.write (\"Name :\"+Name+\"Age                        :\"+age+\"Sex :\"+Sex+\"Field\"+field);     Bw.close ();        }}         catch(Exception e)       {       System.out.println(e);      }      }      }  My txt file  malik|23|male|student  nakul|30|male|student  ram|27|male|worker  mak|25|male|student\nPlease using this api: StringTokenizer.nextToken.\nAnswer:", "response": "<<<api>>>: StringTokenizer.nextToken\n<<<code>>>: \n```java\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.util.StringTokenizer;\n\npublic class fs {\n    public static void main(String[] args) {\n        try {\n            BufferedReader in = new BufferedReader(new FileReader(\"C:/Users/madhan kumar/Desktop/read.txt\"));\n            String line;\n            BufferedWriter bw = new BufferedWriter(new FileWriter(\"out.txt\"));\n            \n            while ((line = in.readLine()) != null) {\n                StringTokenizer tokenizer = new StringTokenizer(line, \"|\");\n                String name = tokenizer.nextToken();\n                String age = tokenizer.nextToken();\n                String sex = tokenizer.nextToken();\n                String field = tokenizer.nextToken();\n                \n                System.out.println(\"Name: \" + name + \" Age: \" + age + \" Sex: \" + sex + \" Field: \" + field);\n                bw.write(\"Name: \" + name + \" Age: \" + age + \" Sex: \" + sex + \" Field: \" + field);\n                bw.newLine();\n            }\n            \n            in.close();\n            bw.close();\n        } catch (Exception e) {\n            System.out.println(e);\n        }\n    }\n}\n```\n\n<<<explanation>>>: \nIn this code, we are using the `StringTokenizer.nextToken` API to split each line of the text file into separate tokens based on the delimiter \"|\". \n\nWe first create a `BufferedReader` to read the text file and a `BufferedWriter` to write the output to the \"out.txt\" file. \n\nInside the while loop, we read each line of the text file using `in.readLine()` and then create a new `StringTokenizer` object with the line and delimiter \"|\". \n\nWe then use `tokenizer.nextToken()` to retrieve each token (name, age, sex, field) from the line and store them in separate variables. \n\nWe print the data to the console using `System.out.println()` and write it to the \"out.txt\" file using `bw.write()` and `bw.newLine()`.\n\nBy using the `StringTokenizer.nextToken` API, we are able to split each line of the text file and print all the data instead of just the last line.", "gpt_response": {"id": "chatcmpl-8WhrvfjsfjquN3w5RCWjkkMZ9Wjns", "object": "chat.completion", "created": 1702805819, "model": "gpt-3.5-turbo-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "<<<api>>>: StringTokenizer.nextToken\n<<<code>>>: \n```java\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.util.StringTokenizer;\n\npublic class fs {\n    public static void main(String[] args) {\n        try {\n            BufferedReader in = new BufferedReader(new FileReader(\"C:/Users/madhan kumar/Desktop/read.txt\"));\n            String line;\n            BufferedWriter bw = new BufferedWriter(new FileWriter(\"out.txt\"));\n            \n            while ((line = in.readLine()) != null) {\n                StringTokenizer tokenizer = new StringTokenizer(line, \"|\");\n                String name = tokenizer.nextToken();\n                String age = tokenizer.nextToken();\n                String sex = tokenizer.nextToken();\n                String field = tokenizer.nextToken();\n                \n                System.out.println(\"Name: \" + name + \" Age: \" + age + \" Sex: \" + sex + \" Field: \" + field);\n                bw.write(\"Name: \" + name + \" Age: \" + age + \" Sex: \" + sex + \" Field: \" + field);\n                bw.newLine();\n            }\n            \n            in.close();\n            bw.close();\n        } catch (Exception e) {\n            System.out.println(e);\n        }\n    }\n}\n```\n\n<<<explanation>>>: \nIn this code, we are using the `StringTokenizer.nextToken` API to split each line of the text file into separate tokens based on the delimiter \"|\". \n\nWe first create a `BufferedReader` to read the text file and a `BufferedWriter` to write the output to the \"out.txt\" file. \n\nInside the while loop, we read each line of the text file using `in.readLine()` and then create a new `StringTokenizer` object with the line and delimiter \"|\". \n\nWe then use `tokenizer.nextToken()` to retrieve each token (name, age, sex, field) from the line and store them in separate variables. \n\nWe print the data to the console using `System.out.println()` and write it to the \"out.txt\" file using `bw.write()` and `bw.newLine()`.\n\nBy using the `StringTokenizer.nextToken` API, we are able to split each line of the text file and print all the data instead of just the last line."}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 387, "completion_tokens": 452, "total_tokens": 839}, "system_fingerprint": null}}