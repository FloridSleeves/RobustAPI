{"api": "StringTokenizer.nextToken", "prompt": "Please answer my code questions using the given API following this format: <<<api>>>: $API\n<<<code>>>: $CODE\n<<<explanation>>>: $EXPLANATION.\nFor API StringTokenizer.nextToken, the API usage rule is: Create a StringTokenizer with a specified string and delimiter, and then obtain the next token as long as there are more tokens available.\n\nQuestion: Add a specific string at the end of a line of file in JAVA: :My question is, I guess, pretty simple : Given one data.txt file, how to add some String in a line, line by line in java? I don't want to delete the content, but simply add some string at the end of the line. Could you please show me a simple code for doing it? Ex, given data.txt file: aaa bbb ccceee fff gggResult after running the java program:aaa bbb ccc dddeee fff ggg hhhAdditional question : is there a simple way to \"insert\" in the line line of a given file some String? If yes, how to do it too?Result:aaa 111 bbb ccceee fff 222 gggThank you in advance for your help.\nPlease using this api: StringTokenizer.nextToken.\nAnswer:", "response": "<<<api>>>: StringTokenizer.nextToken\n<<<code>>>: \n```java\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.StringTokenizer;\n\npublic class FileModifier {\n    public static void main(String[] args) {\n        String filePath = \"data.txt\";\n        String newString = \"hhh\";\n        \n        try {\n            BufferedReader reader = new BufferedReader(new FileReader(filePath));\n            BufferedWriter writer = new BufferedWriter(new FileWriter(\"temp.txt\"));\n            \n            String line;\n            while ((line = reader.readLine()) != null) {\n                StringTokenizer tokenizer = new StringTokenizer(line);\n                StringBuilder modifiedLine = new StringBuilder();\n                \n                while (tokenizer.hasMoreTokens()) {\n                    modifiedLine.append(tokenizer.nextToken());\n                    modifiedLine.append(\" \");\n                }\n                \n                modifiedLine.append(newString);\n                \n                writer.write(modifiedLine.toString().trim());\n                writer.newLine();\n            }\n            \n            reader.close();\n            writer.close();\n            \n            // Rename the temporary file to the original file\n            new File(\"temp.txt\").renameTo(new File(filePath));\n            \n            System.out.println(\"String added successfully!\");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n<<<explanation>>>: \nThis code reads the content of the \"data.txt\" file line by line and uses the StringTokenizer to split each line into tokens. It then appends the newString at the end of each line and writes the modified line to a temporary file \"temp.txt\". Finally, it renames the temporary file to the original file to replace its content.", "gpt_response": {"id": "chatcmpl-8WhfkiqiOlbR1yqThmJSvVDB2bCoE", "object": "chat.completion", "created": 1702805064, "model": "gpt-3.5-turbo-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "<<<api>>>: StringTokenizer.nextToken\n<<<code>>>: \n```java\nimport java.io.BufferedReader;\nimport java.io.BufferedWriter;\nimport java.io.FileReader;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.StringTokenizer;\n\npublic class FileModifier {\n    public static void main(String[] args) {\n        String filePath = \"data.txt\";\n        String newString = \"hhh\";\n        \n        try {\n            BufferedReader reader = new BufferedReader(new FileReader(filePath));\n            BufferedWriter writer = new BufferedWriter(new FileWriter(\"temp.txt\"));\n            \n            String line;\n            while ((line = reader.readLine()) != null) {\n                StringTokenizer tokenizer = new StringTokenizer(line);\n                StringBuilder modifiedLine = new StringBuilder();\n                \n                while (tokenizer.hasMoreTokens()) {\n                    modifiedLine.append(tokenizer.nextToken());\n                    modifiedLine.append(\" \");\n                }\n                \n                modifiedLine.append(newString);\n                \n                writer.write(modifiedLine.toString().trim());\n                writer.newLine();\n            }\n            \n            reader.close();\n            writer.close();\n            \n            // Rename the temporary file to the original file\n            new File(\"temp.txt\").renameTo(new File(filePath));\n            \n            System.out.println(\"String added successfully!\");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n<<<explanation>>>: \nThis code reads the content of the \"data.txt\" file line by line and uses the StringTokenizer to split each line into tokens. It then appends the newString at the end of each line and writes the modified line to a temporary file \"temp.txt\". Finally, it renames the temporary file to the original file to replace its content."}, "logprobs": null, "finish_reason": "stop"}], "usage": {"prompt_tokens": 266, "completion_tokens": 325, "total_tokens": 591}, "system_fingerprint": null}}